% Code below built and used on Matlab

% Details in: 
% Sobczyk J, Pyne MT, Barker A, Mayer J, Hanson KE, Samore MH, Noriega R. 
% Efficient and effective single-step screening of individual samples for SARS-CoV-2 RNA using multi-dimensional pooling and Bayesian inference.
% J. R. Soc. Interface, 20210155 (2021). https://doi.org/10.1098/rsif.2021.0155



function [Pd_outcome,results] = BayesPool_3D_analysis(g,Pid,Pfp,Pool_tests)

m=sqrt(numel(Pool_tests)/3);

threshold=0.4; % for result

IDs=reshape([1:m^3],[m m m]);

% our starting guess is the same for all samples
Pd_prior=ceil(sum(Pool_tests)/3)/m^3;
Pd_prior=ones([m m m])*Pd_prior;

Pd_outcomes=[];

for i=1:m
    for j=1:m
        Txy(i,j)=Pool_tests(3*m*(i-1)+(m-1)*(j-1)+1);
        Txz(i,1,j)=Pool_tests(3*m*(i-1)+(m-1)*(j-1)+2);
        Tyz(1,i,j)=Pool_tests(3*m*(i-1)+(m-1)*(j-1)+3);
    end
end

xy=sum(sum(sum(Txy)));
xz=sum(sum(sum(Txz)));
yz=sum(sum(sum(Tyz)));
pos=[xy,xz,yz];

face_orderings=[[1,2,3];[1,3,2];[2,1,3];[2,3,1];[3,1,2];[3,2,1]];

for variant=1:6;
    POS=pos(face_orderings(variant,:));
    if (min((diff(POS,1,2)),[],2)>=0)
        
        Pd_array=Pd_prior;
        face_order=face_orderings(variant,:);
        
        for face=1:3;
            
            if face_order(face)==1
                %use infor from Txy
                for i=1:m
                    for j=1:m
                        x=cumprod(1-g*Pd_array(i,j,:)); x=x(numel(x));
                        P_ijp=Pid+(Pfp-Pid)*x;
                        if Txy(i,j)==1
                            Pd_array(i,j,:)=Pd_array(i,j,:)*Pid/P_ijp;
                        else
                            Pd_array(i,j,:)=Pd_array(i,j,:)*(1-Pid)/(1-P_ijp);
                        end
                    end
                end
            end
            
            if face_order(face)==2
                %use infor from Txz
                for i=1:m
                    for k=1:m
                        x=cumprod(1-g*Pd_array(i,:,k)); x=x(numel(x));
                        P_ijp=Pid+(Pfp-Pid)*x;
                        if Txz(i,1,k)==1
                            Pd_array(i,:,k)=Pd_array(i,:,k)*Pid/P_ijp;
                        else
                            Pd_array(i,:,k)=Pd_array(i,:,k)*(1-Pid)/(1-P_ijp);
                        end
                    end
                end
            end
            
            if face_order(face)==3
                %use infor from Tyz
                for j=1:m
                    for k=1:m
                        x=cumprod(1-g*Pd_array(:,j,k)); x=x(numel(x));
                        P_ijp=Pid+(Pfp-Pid)*x;
                        if Tyz(1,j,k)==1
                            Pd_array(:,j,k)=Pd_array(:,j,k)*Pid/P_ijp;
                        else
                            Pd_array(:,j,k)=Pd_array(:,j,k)*(1-Pid)/(1-P_ijp);
                        end
                    end
                end
            end
        end
        
        Pd_outcomes=[Pd_outcomes;reshape(Pd_array, [1 m^3])];
    end
end

Pd_outcome=max(round(repmat(Pd_outcomes,[2 1]),2));
results=(Pd_outcome>=threshold);
